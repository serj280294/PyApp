#:kivy 1.10.1

<AppScreens@ScreenManager>:
	MainScreen:
		id: mainScr
	ViewScreen:
		id: viewScr
	DateSelectScreen:
		id: dateSelectScr
	ViewTaskScreen:
		id: viewTaskScr
	ViewAllTasksScreen:
		id: viewAllTasksScr

<MainScreen>:
	name: "mainScr"
	BoxLayout:
		orientation: 'vertical'

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(50)

			Button:
				text: "View all states"
				on_release: 
					app.screen.transition.direction = 'left'; \
					app.screen.current = 'viewScr'; \
					app.screen.get_screen('viewScr').currentDate = ""

			Button:
				text: "Statistic"

		Label:
			size_hint_y: .1
			id: time
			name: "time"
			text_size: self.size
			halign: 'center'
    		valign: 'bottom'
			font_size: sp(30)
			text: root.getTimeDate(self.name)

		Label:
			size_hint_y: .1
			id: date
			name: "date"
			text_size: self.size
			halign: 'center'
    		valign: 'top'
			font_size: sp(16)
			text: root.getTimeDate(self.name)

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(50)
			
			Label:
				id: lastStateLabel
				#text_size: self.size
				#halign: 'left'
    			#valign: 'center'
				font_size: sp(18)
				text: root.getLastState()
			
		RecycleView:
			id: mainrv
			key_viewclass: 'viewclass'
			data: root.getRecycleDataTasks()

			RecycleBoxLayout:
				default_size: None, dp(80)
				default_size_hint: 1, None
				size_hint_y: None
				height: self.minimum_height
				orientation: 'vertical'

		Button:
			size_hint_y: None
			height: dp(50)
			text: "All tasks"
			on_release: 
				app.screen.transition.direction = 'right'; \
				app.screen.current = "viewAllTasksScr"

<TaskElem>:
	orientation: 'horizontal'
	padding: dp(10)
	spacing: dp(10)
	
	Button:
		size_hint_x: None
		width: dp(50)
		text: "Info"
		on_release:
			app.screen.transition.direction = 'right'; \
			app.screen.get_screen('viewTaskScr').taskNumber = root.taskNumber ; \
			app.screen.get_screen('viewTaskScr').previousScreen = "mainScr" ; \
			app.screen.current = "viewTaskScr"

	BoxLayout:
		orientation: 'vertical'

		Label:
			text_size: self.size
			halign: 'left'
			valign: 'center'
			text: "{} - {}".format(root.taskName, root.taskTime)
		
		Label:
			text_size: self.size
			halign: 'left'
			valign: 'center'
			text: "Duration: {} minutes".format(root.taskDuration)
	
	Button:
		size_hint_x: None
		width: dp(100)
		text: "Mark"
		on_release: app.screen.get_screen("mainScr").pressed(root.taskNumber)

<ViewScreen>:
	name: "viewScr"

	BoxLayout:
		orientation: "vertical"
		Button:
			size_hint_y: None
			height: dp(50)
			text: "Back"
			on_release:
				app.screen.transition.direction = 'right'; \
				app.screen.current = "mainScr"

		Label:
			font_size: sp(30)
			size_hint_y: None
			height: dp(50)
			text: "All states"

		Button:
			id: selectDateBtn
			size_hint_y: None
			height: dp(50)
			text: root.currentDate
			on_release:
				app.screen.transition.direction = 'left'; \
				app.screen.current = "dateSelectScr"

        RecycleView:
            id: rv
            key_viewclass: 'viewclass'

            RecycleBoxLayout:
                default_size: None, dp(50)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'

<StateElem>:
	orientation: 'horizontal'
	state: ""
	entryKeyNmb: ""

	Label:
		text: root.state

	Button:
		size_hint_x: None
		width: dp(70)
		#on_release: root.initWin.delState(root.entryKey)
		on_release: root.editState(root.entryKeyNmb)
		text: "Edit"

<EditStatePopup>:
	title: "Edit entry " + self.editEntryNumber

	BoxLayout:
		orientation: 'vertical'

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(30)

			Label:
				text: "Task name:"

			TextInput:
				id: taskName
				multiline: False
				disabled: True

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(30)

			Label:
				text: "State date:"

			TextInput:
				id: stateDate
				multiline: False
				disabled: True

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(30)

			Label:
				text: "State time:"

			TextInput:
				id: stateTime
				multiline: False

		Label:

		Button:
			size_hint_y: None
			height: dp(50)
			text: "Delete entry"
			on_release:
				app.deleteEntry(root.editEntryNumber); 				 \
				app.screen.get_screen('viewScr').updateStatesList(); \
				root.dismiss()
		
		Button:
			size_hint_y: None
			height: dp(50)
			text: "Save and close"
			on_release:
				root.saveChanges(); \
				app.screen.get_screen('viewScr').updateStatesList(); \
				root.dismiss()

<DateSelectScreen>:
	name: "dateSelectScr"

	BoxLayout:
		orientation: "vertical"
		Button:
			size_hint_y: None
			height: dp(50)
			text: "Back"
			on_release:
				app.screen.transition.direction = 'right'; \
				app.screen.current = "viewScr"

		Label:
			font_size: sp(30)
			size_hint_y: None
			height: dp(50)
			text: "Select entrys day"

		RecycleView:
            id: dateSelectList
            key_viewclass: 'viewclass'

            RecycleBoxLayout:
                default_size: None, dp(50)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'

<DateSelectItem>:
	on_release:
		app.screen.get_screen('viewScr').currentDate = self.text; \
		app.screen.transition.direction = 'right'; \
		app.screen.current = "viewScr"

<ViewTaskScreen>:
	name: "viewTaskScr"

	BoxLayout:
		orientation: 'vertical'
		spacing: dp(10)
		
		Button:
			size_hint_y: None
			height: dp(50)
			text: "Back"
			on_release: root.checkTaskChanges()
				#app.screen.transition.direction = 'left'; \
				#app.screen.current = root.previousScreen

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(30)
			padding: dp(20), 0, dp(10), 0
			
			Label:
				id: taskNameLabel
				size_hint_x: .4
				text_size: self.size
				halign: 'left'
				valign: 'center'
				text: "Task name:"

			TextInput:
				id: taskName
				size_hint_x: .6
				multiline: False
				padding_y: self.height / 2 - self.line_height / 2

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(40)
			padding: dp(20), 0, dp(10), 0

			Label:
				size_hint_x: .4
				text_size: self.size
				halign: 'left'
				valign: 'center'
				text: "Task priority:"

			Spinner:
				id: prioritySpinner
				size_hint_x: .6
				sync_height: True
				values: "Normal", "High"
				text: "Normal"

		BoxLayout:
			id: selectWeekdays
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(50)
			
			ToggleButton:
				text: "MON"
			ToggleButton:
				text: "TUE"
			ToggleButton:
				text: "WEN"
			ToggleButton:
				text: "THU"
			ToggleButton:
				text: "FRI"
			ToggleButton:
				text: "SAT"
			ToggleButton:
				text: "SUN"

		BoxLayout:
			orientation: 'vertical'
			size_hint_y: None
			height: dp(80)
			
			Label:
				id: taskTimeLabel
				text: "Task time"

			TextInput:
				id: taskTime
				size_hint_y: None
				height: dp(50)
				multiline: False
				padding_y: self.height / 2 - self.line_height / 2
				font_size: sp(30)
				padding_x: self.center[0] - self._get_text_width(self.text, self.tab_width, self._label_cached) / 2
		
		BoxLayout:
			orientation: 'vertical'
			size_hint_y: None
			height: dp(80)
			
			Label:
				id: taskDurationLabel
				text: "Task duration (minutes)"

			TextInput:
				id: taskDuration
				size_hint_y: None
				height: dp(50)
				multiline: False
				padding_y: self.height / 2 - self.line_height / 2
				font_size: sp(30)
				padding_x: self.center[0] - self._get_text_width(self.text, self.tab_width, self._label_cached) / 2

		Label:
			font_size: sp(30)
			#size_hint_y: None
			#height: dp(50)
			#text: "New task screen"

		Button:
			id: taskActionBtn
			size_hint_y: None
			height: dp(50)
			text: "Save task"
			on_release: root.taskAction()

<ChangedTaskPopup>:
	title: "Task has been changed"

	BoxLayout:
		orientation: 'vertical'

		Label:
			size_hint_y: None
			text_size: self.width, None
			height: self.texture_size[1]
			padding: dp(10), dp(10)
			text: root.getChangesInfo()

		BoxLayout:
			orientation: 'horizontal'
			size_hint_y: None
			height: dp(50)

			Button:
				text: root.getActionButtonText()
				on_release:
					app.screen.get_screen('viewTaskScr').choiceForChanges(choice="process")
					root.dismiss()

			Button:
				text: "Cancel"
				on_release: 
					app.screen.get_screen('viewTaskScr').choiceForChanges(choice="exit")
					root.dismiss()

<ViewAllTasksScreen>:
	name: "viewAllTasksScr"

	BoxLayout:
		orientation: 'vertical'
		Button:
			size_hint_y: None
			height: dp(50)
			text: "Back"
			on_release:
				app.screen.transition.direction = 'left'; \
				app.screen.current = "mainScr"

		Label:
			font_size: sp(30)
			size_hint_y: None
			height: dp(50)
			text: "All tasks"

		RecycleView:
			id: allTasksRv
			key_viewclass: 'viewclass'
			#data: root.getRecycleDataTasks()

			RecycleBoxLayout:
				default_size: None, dp(80)
				default_size_hint: 1, None
				size_hint_y: None
				height: self.minimum_height
				orientation: 'vertical'

		Button:
			size_hint_y: None
			height: dp(50)
			text: "New task"
			on_release:
				app.screen.transition.direction = 'right'; \
				app.screen.get_screen('viewTaskScr').taskNumber = '0' ; \
				app.screen.get_screen('viewTaskScr').previousScreen = "viewAllTasksScr" ; \
				app.screen.current = "viewTaskScr"

<ViewTasksElem>:
	orientation: 'horizontal'
	padding: dp(10), 0

	BoxLayout:
		orientation: 'vertical'
		size_hint_x: .7

		Label:
			text_size: self.size
			halign: 'left'
			valign: 'center'
			font_size: sp(18)
			text: root.taskName

		Label:
			text_size: self.size
			halign: 'left'
			valign: 'center'
			font_size: sp(24)
			text: root.taskTime

		Label:
			text_size: self.size
			halign: 'left'
			valign: 'center'
			text: "Duration: {} minutes".format(root.taskDuration)

	AnchorLayout:
		size_hint_x: .3
		anchor_x: 'center'
		anchor_y: 'center'

		Button:
			size_hint_y: None
			height: dp(50)
			text: "More"
			on_release:
				app.screen.transition.direction = 'right'; \
				app.screen.get_screen('viewTaskScr').taskNumber = root.taskNumber ; \
				app.screen.get_screen('viewTaskScr').previousScreen = "viewAllTasksScr" ; \
				app.screen.current = "viewTaskScr"